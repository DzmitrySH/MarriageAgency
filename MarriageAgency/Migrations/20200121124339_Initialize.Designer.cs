// <auto-generated />
using System;
using MarriageAgency.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MarriageAgency.Migrations
{
    [DbContext(typeof(MarriageAgencyContext))]
    [Migration("20200121124339_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MarriageAgency.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addres")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Age");

                    b.Property<string>("BadHabits")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("Children");

                    b.Property<DateTime>("DateofBirth");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("FirsLastMidName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int>("Height");

                    b.Property<string>("Hobby")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("NationalID");

                    b.Property<string>("Passport")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<int>("RelationID");

                    b.Property<int>("Weight");

                    b.Property<int>("ZodiacSignID");

                    b.HasKey("ClientID");

                    b.HasIndex("NationalID");

                    b.HasIndex("RelationID");

                    b.HasIndex("ZodiacSignID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("MarriageAgency.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addres")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Age");

                    b.Property<string>("FirsLastMidName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Passport")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<int>("PositionID");

                    b.HasKey("EmployeeID");

                    b.HasIndex("PositionID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MarriageAgency.Models.Nationalitie", b =>
                {
                    b.Property<int>("NationalID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.HasKey("NationalID");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("MarriageAgency.Models.Position", b =>
                {
                    b.Property<int>("PositionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamePosition")
                        .HasMaxLength(20);

                    b.Property<string>("Requirement")
                        .HasMaxLength(20);

                    b.Property<string>("Responsibilitie")
                        .HasMaxLength(20);

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.HasKey("PositionID");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("MarriageAgency.Models.Relation", b =>
                {
                    b.Property<int>("RelationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.HasKey("RelationID");

                    b.ToTable("Relations");
                });

            modelBuilder.Entity("MarriageAgency.Models.Service", b =>
                {
                    b.Property<int>("ServiseID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientID");

                    b.Property<decimal>("Cost")
                        .HasColumnType("money");

                    b.Property<DateTime>("Date");

                    b.Property<int>("EmployeeID");

                    b.HasKey("ServiseID");

                    b.HasIndex("ClientID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("MarriageAgency.Models.ZodiacSign", b =>
                {
                    b.Property<int>("ZodiacSignID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.HasKey("ZodiacSignID");

                    b.ToTable("ZodiacSigns");
                });

            modelBuilder.Entity("MarriageAgency.Models.Client", b =>
                {
                    b.HasOne("MarriageAgency.Models.Nationalitie", "Nationalitie")
                        .WithMany("Clients")
                        .HasForeignKey("NationalID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MarriageAgency.Models.Relation", "Relation")
                        .WithMany("Clients")
                        .HasForeignKey("RelationID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MarriageAgency.Models.ZodiacSign", "ZodiacSign")
                        .WithMany("Clients")
                        .HasForeignKey("ZodiacSignID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MarriageAgency.Models.Employee", b =>
                {
                    b.HasOne("MarriageAgency.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MarriageAgency.Models.Service", b =>
                {
                    b.HasOne("MarriageAgency.Models.Client", "Clients")
                        .WithMany("Services")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MarriageAgency.Models.Employee", "Employee")
                        .WithMany("Services")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
